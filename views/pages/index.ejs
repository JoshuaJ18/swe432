<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GirlyPops</title>
</head>
<style>
.all {
    display: flex;
    justify-content: space-between; 
    align-items: flex-start; 
}
.header-content {
    display: flex;
    position: fixed;
    background-color: #c8c7d7;
    justify-content: center;
    align-items: center;
    max-height: 30vh;
    width: 100vw;
    top: 0;
    z-index: 10;
}

.left-bar {
    position: fixed;
    height: 100vh;
    width: 18%;
    padding-left: 2vw;
    padding-top: 20vh;
    top: 0;
    left: 0;
    background-color: #c8c7d7;
    z-index: 10;
}

.search {
    padding-top: 30vh;
    left: 0;
}

.playlist-management {
    width: 59%;
    min-height: 30vh;
    margin-top: 30vh;
    margin-left: 20vw;
}

.current-playlist {
    background-color: #d8e2eb;
    padding-top: 5vh;
    padding-bottom: 5vh;
    padding-left: 1vw;
    padding-right: 1vw;
}

.song-search {
    margin-top: 40vh;
}

.search {
    align-items: left;
    justify-content: left;
    overflow-y: auto;
}

.right-bar {
    position: fixed;
    width: 18%;
    height: 100vh;
    align-content: right;
    justify-content: right;
    padding-right: 2vw;
    padding-top: 20vh;
    padding-left: 2vw;
    right: 0;
    top: 0;
    background-color: #c8c7d7;
    z-index: 10;
}

.play-manage {
    position: relative;
    justify-self: center;
    align-self: center;
    margin-top: 20vh;
}
.songs-list {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1vw;
    list-style-type: none;
    margin-left: 1vw;
}
.song {
    min-width: 10vw;
    max-width: 15vw;
    height: 8vh;
    background-color: #8897AA;
    color: white;
    border: none;
}
.song:hover {
    color: black;
    background-color: #566e8d;
}
.search-input {
    margin-left: 4vw;
}
.playlist-list {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1vw;
    list-style-type: none;
}
.playlist-list li {
    display: flex;
    list-style: none;
    background-color: #8897AA;
    justify-content: space-between;
    color: white;
    font-size: 1rem;
    height: auto;
    width: auto;
    padding-left: 1vw;
}
.playlist-list-song-name {
    display: inline-flex;
}
.playlist-list-button {
    display: inline-flex;
    justify-items: center;
    align-content: center;
    align-items: center;
    background-color: #5f728a;
    border-style: none;
}
.playlist-list-button:hover {
    background-color: #253952;
    color: white;
    transition-duration: .1s;
}
.search-djs {
    overflow-y: auto;
}
</style>

<body>
    <script>
        let playlistSongs = [];

        async function addSong(song) {
            const playlistList = document.getElementById("playlist-list");
            const listItem = document.createElement("li");
            const p = document.createElement("p");
            const text = document.createTextNode(song.innerHTML);
            const button = document.createElement("button");
            button.innerText = "X";
            button.onclick = function () {
                removeSong(button);
            }
            button.className = "playlist-list-button";

            p.appendChild(text);
            listItem.appendChild(p);
            listItem.appendChild(button);
            listItem.id = song.id;
            
            playlistList.appendChild(listItem);

            const sendList = [];
            sendList.push(song.id);
            sendList.push(song.innerHTML);

            
            fetch('/api/sessions/addSong', {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(sendList)
            })
            .then((res) => {
                console.log(res);
            })
            .catch((err) => {
                console.log(err);
            })
            
        };

        const btn2 = document.querySelector("#song-search button");
        btn2.addEventListener("click", addSong.bind(this));


        function playlistSubmit(event) {
            event.preventDefault();
            let songIdList = [];

            const newPlaylistSongs = document.querySelectorAll("#playlist-list li");

            newPlaylistSongs.forEach((song) => {
                let songName = song.innerHTML.split(">")[1].split("<")[0];
                const songId = song.id;

                songIdList.push(songId);
                
            });

            songIdList = songIdList.filter((songId) => !(songId === null));

            const dj = document.getElementById("dj-input").innerText;
            const playlistName = document.getElementById("playlist-name-input").value;
            const date = document.getElementById("date-input").value;
            const newDate = new Date(date);
            const time = document.getElementById("time-input").value.split(":");
            newDate.setHours(time[0]);
            newDate.setMinutes(time[1]);

            const newPlaylist = {name: playlistName, dj:dj, date: newDate, songs: songIdList};

            fetch('/api/playlists/newPlaylist', {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(newPlaylist)
            })
            .then((res) => {
                console.log(res);
            })
            .catch((err) => {
                console.log(err);
            });
        };

        const btn1 = document.querySelector("#playlist button");
        btn1.addEventListener("click", playlistSubmit);

        async function searchSong(search) {
            const searchInput = document.getElementById("search-song-input").value;
            let newSongs;

            const currentSongs = document.getElementById("songs-list");
            currentSongs.innerHTML = '';

            if (!(searchInput) || searchInput.length < 1) {
                try {
                    const res = await fetch(`/api/songs/searchSongs`, {
                        method: 'GET',
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });

                    newSongs = await res.json();
                    console.log("\ntest " + newSongs);
                } catch (err) {
                    console.log(err);
                }
            } else {
                try {
                    const res = await fetch(`/api/songs/searchSongs/${searchInput}`, {
                        method: 'GET',
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });

                    newSongs = await res.json();
                } catch (err) {
                    console.log(err);
                }
            }

            const currentSongList = document.querySelector("#songs-list");

            newSongs.forEach((song) => {
                let button = document.createElement("button");
                let songName = document.createTextNode(song.name);
                button.appendChild(songName);
                button.className = "song";
                button.id = song._id;
                button.onclick = function () {
                    addSong(button);
                }

                let li = document.createElement("li");
                li.appendChild(button);
                currentSongList.appendChild(li);
            });

        }

        const btn3 = document.querySelector("#song-search input");
        btn3.addEventListener("change", searchSong.bind(this));

        async function playlistTemplate(option) {
            let choice = option.value;
            let playlistTemp;

            if (!(choice === "-1")) {
                const currentSongs = document.getElementById("playlist-list");
                currentSongs.innerHTML = '';

                try {
                    const res = await fetch(`/api/playlists/getPlaylistSongs/${choice}`, {
                        method: 'GET',
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });

                    playlistTemp = await res.json();
                } catch (err) {
                    console.log(err);
                }

                const currentSongList = document.getElementById("playlist-list");

                playlistTemp.songs.forEach(async (song) => {
                    let currentSong;
                    try {
                        const res = await fetch(`/api/songs/getSongById/${song}`, {
                            method: 'GET',
                            headers: {
                                "Content-Type": "application/json"
                            }
                        });

                        currentSong = await res.json();
                    } catch (err) {
                        console.log(err);
                    }

                    const listItem = document.createElement("li");
                    const p = document.createElement("p");
                    let text = document.createTextNode(currentSong.name);

                    p.appendChild(text);
                    listItem.appendChild(p);
                    listItem.id = currentSong._id;

                    currentSongList.appendChild(listItem);
                });

            } else {
                const currentSongs = document.getElementById("playlist-list");
                currentSongs.innerHTML = '';
            }
        }

        function assignDJ(dj) {
            const assignedDJSpot = document.getElementById("dj-input");
            assignedDJSpot.innerHTML = '';
            const text = document.createTextNode(dj.innerHTML);
            assignedDJSpot.appendChild(text);
        }

        function removeSong(songId) {
            console.log(songId.parentNode);
            songId.parentNode.remove();
        }

        const btn4 = document.querySelectorAll("#playlist-list button");
        btn4.forEach((btn) => {
            btn.addEventListener("click", removeSong.bind(this));
        });

        function deleteCache() {
            fetch('/api/sessions/clearSession', {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json"
                },
            })
            .then((res) => {
                console.log(res);
            })
            .catch((err) => {
                console.log(err);
            });

            window.location.reload();
        }
    </script>
    <header>
        <div class="header-content">
            <h1>GirlyPops</h1>
        </div>
    </header>
    <main>
        <div class="all">
            <div class="left-bar">
                <div class="calendar">
                    <h1>Calendar</h1>
                    <p>Choose a Timeslot</p>
                    <input type="date" id="date-input"></input>
                    <input type="time" id="time-input"></input>
                </div>
                <div class="search">
                    <h1>DJ's</h1>
                    <p>Choose a DJ</p>
                    <div class="search-djs">
                        <% users.forEach((user) => { %>
                            <button onclick="assignDJ(this)"><%= user.username %></button>
                        <% }); %>
                    </div>
                </div>
            </div>

            <div class="playlist-management" id="playlist-management">
                <div class="playlist" id="playlist">
                    <h1 class="play-manage">Playlist Management</h1>
                    <form class="current-playlist" onsubmit="playlistSubmit(event)">
                        <p>Start From Old Playlist?</p>
                        <select id="dropdown" onchange="playlistTemplate(this)">
                            <option value="-1">New Playlist</option>
                            <% oldPlaylists.forEach((playlist) => { %>
                                <option value="<%= playlist.name %>"><%= playlist.name %></option>
                            <% }); %>
                        </select>

                        <p>Assigned DJ:</p>
                        <p id="dj-input"></p>

                        <p>New Playlist Name:</p>
                        <input type="text" id="playlist-name-input"></input>

                        <p>Songs:</p>
                        <ul class="playlist-list" id="playlist-list">
                            <% sessionSongs.forEach((song) => { %>
                                <li id="<%= song[0] %>"><p class="playlist-list-song-name"><%= song[1] %></p><button class="playlist-list-button" onclick="removeSong(this)">X</button></li>
                            <% }); %>
                        </ul>
                        <button>create playlist</button>
                    </form>
                </div>
                <div class="song-search" id="song-search">
                    <div class="search-input">
                        <p>Search for a song</p>
                        <input type="search" onchange="searchSong(this)" id="search-song-input"></input>
                    </div>
                    
                    <div class="songs">
                        <ul class="songs-list" id="songs-list">
                            <% songs.forEach((song) => { %>
                                <li class="song-li-item"><button onclick="addSong(this)" id="<%= song._id %>" class="song"><%= song.name %></button></li>
                            <% }); %>  
                        </ul>
                    </div>
                </div>
            </div>
    
            <div class="right-bar">
                <div>
                    <h1>Logged In</h1>
                    <button onclick="deleteCache()">Delete Cache</button>
                    <p>Deleting the cache will remove the autopopulated playlist songs</p>
                </div>
            </div>
        </div>
    </main>
</body>
</html>
